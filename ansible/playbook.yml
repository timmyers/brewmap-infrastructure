# Run docker swarm role
- name: "Provision Docker Swarm Cluster"
  hosts: all
  vars:
    skip_docker_py: True
    skip_group: True
  roles:
    - { role: atosatto.docker-swarm }

# Setup docker manager for remote access
- hosts: docker_swarm_manager[0]
  become: true
  tasks:
    - name: Copy over docker daemon options.
      copy:
        src: ./daemon.json
        dest: /etc/docker/daemon.json

    - name: Fix docker systemd definition
      replace:
        path: /lib/systemd/system/docker.service
        regexp: "^ExecStart=/usr/bin/dockerd -H fd://$"
        replace: "ExecStart=/usr/bin/dockerd"
        backup: yes

    - name: Restart docker daemon
      systemd:
        name: docker
        daemon_reload: yes
        state: restarted

- name: Start traefik service
  hosts: docker_swarm_manager[0]
  become: true
  tasks:
    - name: Check if traefik-net docker network is up
      shell: >
        docker network inspect traefik-net
      register: traefik_net
      ignore_errors: yes

    - name: traefik-net docker network up?
      debug: msg="Running {{ traefik_net.rc }}"

    - name: Create traefik-net docker overlay network
      when: traefik_net.rc != 0
      shell: >
        docker network create \
        --opt encrypted \
        --driver overlay \
        traefik-net

    - name: Copy traefik stack definition
      copy:
        src: ./traefikStack.yml
        dest: /tmp/traefikStack.yml

    - name: Ensure /etc/traefik exists
      file: >
        path=/etc/traefik
        recurse=yes
        state=directory

    - name: Copy traefik toml definition
      copy:
        src: ./traefik.toml
        dest: /etc/traefik/traefik.toml

    - name: Start traefik stack
      shell: >
        docker stack deploy \
        --compose-file /tmp/traefikStack.yml \
        traefik

- name: Start portainer stack
  hosts: docker_swarm_manager[0]
  become: true
  tasks:
    - name: Copy portainer stack definition
      copy:
        src: ./portainerStack.yml
        dest: /tmp/portainerStack.yml

    - name: Start portainer stack
      shell: >
        docker stack deploy \
        --compose-file /tmp/portainerStack.yml \
        portainer

# - name: Start traefik service
#   hosts: docker_swarm_manager[0]
#   become: true
#   tasks:
#     - name: Check if portainer service running
#       shell: >
#         docker service inspect portainer
#       register: portainer_service
#       ignore_errors: yes
#
#     - name: Portainer service running?
#       debug: msg="Running {{ portainer_service.rc }}"
#
#     - name: Add portainer docker service
#       when: portainer_service.rc != 0
#       shell: >
#         docker service create \
#         --name portainer \
#         --publish 9000:9000 \
#         --constraint 'node.role == manager' \
#         --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock \
#         portainer/portainer \
#         -H unix:///var/run/docker.sock
#
